@model IEnumerable<ClienteMonument.Models.Monument>

@{
    ViewData["Title"] = "Index";
}

@{
    List<Country> paises = ViewData["PAIS"] as List<Country>;
    Country paisSelect = ViewData["valor"] as Country;
    List<Monument> listaMonumentos = ViewData["MONUMENTS"] as List<Monument>;
    String continente = ViewData["CONTINENTE"] as String;
}

@section Scripts {
    <script src="~/js/leaflet.js"></script>
    <script>
       $(document).ready(function () {
            //$(selector).load(URL,data,callback);
           //console.log(@Html.Raw(Json.Serialize(ViewData["MONUMENTS"])))
            $("#mapid").load("/Index/Monument", function () {
                var latitud = [];
                var longitud = [];

                if (@Html.Raw(Json.Serialize(ViewData["MONUMENTS"])) != null) {
                    var lista = @Html.Raw(Json.Serialize(ViewData["MONUMENTS"]));
                } else {
                    var lista = [];
                }

                for (var i = 0; i < lista.length; i++){
                    var obj = lista[i];
                    for (var prop in obj) {
                        if (prop == "latitud") {
                            if (obj[prop] != null)
                            {
                                latitud.push(parseFloat(obj[prop]));
                            }
                        }
                        if (prop == "longitud") {
                            if (obj[prop] != null)
                            {
                                longitud.push(parseFloat(obj[prop]));
                            }
                        }
                    }
                }
                //console.log(latitud)
                //console.log(longitud)


                var maxLat = Math.max.apply(Math,latitud);
                var minLat = Math.min.apply(Math, latitud);
                var maxLong = Math.max.apply(Math, longitud);
                var minLong = Math.min.apply(Math, longitud);

                var mymap = L.map('mapid').setView([maxLat, minLong], 13);
                for (var i = 0; i < lista.length; i++){
                    var obj = lista[i];
                    var lat = 0;
                    var long = 0;
                    var monumentos = "Descripcion";
                    var nombre = "";

                    for (var prop in obj) {
                        var estado = false;
                        if (prop == "latitud") {
                            if (obj[prop] != null)
                            {
                                latitud.push(parseFloat(obj[prop]));
                                lat = parseFloat(obj[prop]);
                                estado = true;
                            }
                        }
                        if (prop == "longitud") {
                            if (obj[prop] != null)
                            {
                                longitud.push(parseFloat(obj[prop]));
                                long = parseFloat(obj[prop]);
                                estado = true;
                            }
                        }
                        if (prop == "nombreMonu" ) {
                             nombre= obj[prop];
                        }
                    }

                    //console.log(lat)
                    console.log(long)
                    console.log(nombre)


                    var marker = L.marker([lat, long]).addTo(mymap);

                    var circle = L.circle([lat, long], {
                        color: 'red',
                        fillColor: '#f03',
                        fillOpacity: 0.5,
                        radius: 500
                    }).addTo(mymap);

                    marker.bindPopup("<strong style='font-size:15px; text-align:center'>"
                        + nombre + "</strong>" + "<br>" + monumentos).openPopup();

                        //circle.bindPopup("I am a circle.");
                        //polygon.bindPopup("I am a polygon.");

                    var popup = L.popup()
                        .setLatLng([lat, long])
                        .setContent(nombre).setContent(monumentos)
                        .openOn(mymap);
                }

            L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
                subdomains: ['a', 'b', 'c']
            }).addTo(mymap);
            });
       });
    </script>

}
<div class="container">
    <div class="row align-items-center">
        <div class="col-lg-6">
            <div class="form-group d-flex">
                <form asp-controller="Monument" asp-action="Index" method="post">
                    <label>País:</label>
                    <select name="siglas">

                        @foreach (Country pais in paises)
                        {
                            if (paisSelect != null && paisSelect.Siglas == pais.Siglas)
                            {
                                <option value="@pais.Siglas" selected>@pais.NombrePais</option>
                            }
                            else
                            {
                                <option value="@pais.Siglas">@pais.NombrePais</option>

                            }
                        }

                    </select>
                    <button type="submit" class="btn btn-primary text-white px-4">Buscar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@if (listaMonumentos != null)
{
    <div style="text-align:center">
        <div id="mapid" style="width: 1000px; height: 600px;
    background-color:pink; margin:auto; display:block" >

        </div>
    </div>
}@*else
{
<h1>No se encontraron resultados para ésta localización</h1>
}*@

<h1 style="margin-left:10%;margin-right:10%; text-align:center">@ViewData["MenError"]</h1>



